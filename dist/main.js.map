{"version":3,"file":"main.js","mappings":"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","sources":["webpack://javascript_project/./node_modules/victor/index.js","webpack://javascript_project/webpack/bootstrap","webpack://javascript_project/webpack/runtime/compat get default export","webpack://javascript_project/webpack/runtime/define property getters","webpack://javascript_project/webpack/runtime/hasOwnProperty shorthand","webpack://javascript_project/./src/waypoint.js","webpack://javascript_project/./src/catPlacement.js","webpack://javascript_project/./src/enemy.js","webpack://javascript_project/./src/projectile.js","webpack://javascript_project/./src/cat.js","webpack://javascript_project/./src/index.js"],"sourcesContent":["exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export const waypoints = [\n{\n  \"x\":-67,\n  \"y\":441\n },\n {\n  \"x\":191,\n  \"y\":441\n },\n {\n  \"x\":190,\n  \"y\":315\n },\n {\n  \"x\":508,\n  \"y\":315\n },\n {\n  \"x\":507,\n  \"y\":569\n },\n {\n  \"x\":762,\n  \"y\":570\n },\n {\n  \"x\":764,\n  \"y\":189\n },\n {\n  \"x\":1022,\n  \"y\":189\n },\n {\n  \"x\":1019,\n  \"y\":442\n },\n {\n  \"x\":1346,\n  \"y\":447\n }\n];\n","export const catPlacement = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0,\n  0, 965, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0,\n  965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0,\n  965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965,\n  0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0];\n","import { waypoints } from \"./waypoint.js\"\n\nexport default class Enemy {\n  constructor({position = { x: 0, y: 0 }}) {\n    this.position = position;\n    this.waypointIndex = 0;\n    this.width = 90;\n    this.height = 90;\n    // this.center = {\n    //   x: this.position.x + CONSTANTS.ENEMY_WIDTH/2,\n    //   y: this.position.y + CONSTANTS.ENEMY_HEIGHT/2\n    // }\n    this.radius = 50;\n    this.health = 100;\n    this.velocity = { x: 0, y: 0 }\n    // this.speed = 5;\n    this.image = new Image()\n    this.image.src = \"assets/slimes_resized.png\"\n  }\n\n  drawEnemy(c) {\n    c.drawImage(this.image, this.position.x, this.position.y)\n\n    //health bar\n    c.fillStyle = 'black';\n    c.fillRect((this.position.x - this.width/2), this.position.y-60, this.width, 8)\n\n    c.fillStyle = 'purple';\n    c.fillRect((this.position.x - this.width/2), this.position.y-60, (this.width * this.health/100), 8)\n  }\n\n  update(c) {\n    // draw the enemy and update its position\n    this.drawEnemy(c);\n\n    const waypoint = waypoints[this.waypointIndex]\n    const yDistance = waypoint.y - this.position.y\n    const xDistance = waypoint.x - this.position.x\n    const angle = Math.atan2(yDistance, xDistance)\n    const speed = 5;\n\n    this.velocity.x = Math.cos(angle) * speed\n    this.velocity.y = Math.sin(angle) * speed\n\n    this.position.x += this.velocity.x\n    this.position.y += this.velocity.y\n\n    if (\n      Math.abs(Math.round(this.position.x) - Math.round(waypoint.x)) < Math.abs(this.velocity.x) &&\n      Math.abs(Math.round(this.position.y) - Math.round(waypoint.y)) < Math.abs(this.velocity.y) &&\n      this.waypointIndex < waypoints.length - 1) {\n      this.waypointIndex++;\n    }\n  }\n}\n","import Victor from 'victor';\n// import Enemy from './enemies'\nimport {enemies} from './index'\n\nexport default class Projectile {\n  constructor({position = {x:0, y:0}, enemy}) {\n    this.position = position;\n    this.velocity = {x:0, y:0}\n    this.speed = 5;\n    this.enemy = enemy;\n    this.radius = 10;\n    this.image = new Image()\n    this.image.src = \"assets/projectile.png\"\n  }\n\n  draw(c) {\n    c.drawImage(this.image, this.position.x, this.position.y)\n    // c.beginPath();\n    // c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\n    // c.fillStyle = \"red\";\n    // c.fill();\n  }\n\n  update(c) {\n    this.draw(c);\n\n    const projectilePos = new Victor(this.position.x, this.position.y);\n    const enemyPos = new Victor(this.enemy.position.x, this.enemy.position.y);\n\n    const direction = enemyPos.subtract(projectilePos);\n\n    const timeElapsed = 1;\n    const velocity = direction.clone().normalize().multiplyScalar(this.speed);\n    projectilePos.add(velocity.clone().multiplyScalar(timeElapsed));\n\n    this.position.x = projectilePos.x;\n    this.position.y = projectilePos.y;\n  }\n}\n","import Projectile from \"./projectile\"\nimport {enemies} from './index'\n\nexport default class Cat {\n  constructor({position = {x: 0, y:0}}) {\n    this.position = position;\n    this.size = 64;\n    this.center = {\n      x: this.position.x + this.size/2,\n      y: this.position.y + this.size/2\n    }\n    this.projectiles = [\n      new Projectile({position: {x: this.center.x, y: this.center.y }, enemy: enemies[0]})\n    ];\n    this.occupied = false;\n    //radius of which the cat can shoot at enemies\n    this.radius = 250;\n    this.target;\n    this.frames = 0;\n    this.image = new Image()\n    this.image.src = \"assets/sunglassescat.png\"\n  }\n\n  draw(c) {\n    c.drawImage(this.image, this.position.x, this.position.y)\n    // c.fillStyle = \"purple\";\n    // c.fillRect(this.position.x, this.position.y, this.size, this.size);\n    c.beginPath();\n    c.arc(this.center.x, this.center.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = 'rgba(0,0,255,0)'\n    c.fill();\n  }\n\n  update(c) {\n    this.draw(c);\n    if (this.frames % 90 === 0 && this.target) {\n      this.projectiles.push(\n        new Projectile({position: {x: this.center.x, y: this.center.y }, enemy: this.target})\n      )\n    }\n    this.frames++;\n  }\n\n\n  // shoot() {\n  //   this.projectiles.push(\n  //     new Projectile({\n  //       position: {\n  //         x: this.center.x - 20,\n  //         y: this.center.y - 110\n  //       },\n  //       enemy: this.target\n  //     })\n  //   )\n  // }\n\n}\n","import { waypoints } from \"./waypoint.js\"\nimport { catPlacement } from \"./catPlacement.js\"\nimport Enemy from \"./enemy.js\"\n// import CatTile from \"./CatTile.js\"\nimport Cat from \"./cat.js\"\nimport Projectile from \"./projectile.js\"\nimport Victor from \"victor\"\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\n  const canvas = document.getElementById(\"canvas\");\n  const c = canvas.getContext(\"2d\");\n\n  // const bgCanvas = document.getElementById(\"background-canvas\");\n  // const bgCtx = bgCanvas.getContext(\"2d\");\n\n  // bgCanvas.width = window.innerWidth;\n  // bgCanvas.height = window.innerHeight;\n  // bgCtx.fillStyle = \"black\";\n  // bgCtx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n\n  canvas.width = 1280;\n  canvas.height = 768;\n  c.fillStyle = \"white\";\n  c.fillRect(0, 0, canvas.width, canvas.height);\n\n  // creates and returns a new HTMLImageElement\n  const img = new Image();\n  img.onload = () => {\n    move();\n  }\n\n  img.src= \"assets/finalMap.png\"\n\n  // 2D array of all possible catTile placement position using waypoints data\n  const placementPositions = [];\n\n  // parse waypoints data with 20 columns per row\n  // columns indicate x coordinates, rows indicate y coordinates\n  for (let i = 0; i < catPlacement.length; i += 20) {\n    placementPositions.push(catPlacement.slice(i, i+20));\n  }\n  class CatTile {\n    // object destructuring with position\n    constructor({position = {x: 0, y: 0}}) {\n      this.position = position;\n      this.size = 64; //64 pixels per tile\n      this.color = \"rgba(255, 255, 255, 0.2)\";\n      this.occupied = false;\n    }\n\n    draw() {\n      // c.fillStyle = this.color;\n      // 255 in each red green and blue makes it white\n      c.fillStyle = this.color;\n      c.fillRect(this.position.x, this.position.y, this.size, this.size);\n    }\n\n    update(mouse) {\n      this.draw();\n\n      if (mouse.x > this.position.x && mouse.x < this.position.x + this.size &&\n          mouse.y > this.position.y && mouse.y < this.position.y + this.size) {\n          this.color = \"rgba(255, 255, 255, 0.2)\";\n      } else {\n        this.color = \"rgba(255, 255, 255, 0)\"\n      }\n    }\n\n  }\n\n  const catPlacementTiles = [];\n\n  placementPositions.forEach((row, y) => {\n    row.forEach((col, x) => {\n      if (col === 965) {\n        // place a Tile at the position (x,y) if col has a value\n        catPlacementTiles.push(new CatTile({\n          position: {\n            x: x * 64,\n            y: y * 64\n          }\n        }));\n      }\n    });\n  })\n\n\n  export const enemies = [];\n  const cats = [];\n  let activeTile = undefined;\n  let enemyCount = 3;\n  let diamonds = 100;\n  let hearts = 7;\n\n  function enemySpawn(count) {\n    for (let i = 1; i < count + 1; i++) {\n      let enemyDistance = i * 130;\n      let newEnemy = new Enemy({ position: {x: waypoints[0].x - enemyDistance, y: waypoints[0].y }})\n      enemies.push(newEnemy);\n    }\n  }\n\n  enemySpawn(enemyCount);\n\n  function move() {\n    const moveId = requestAnimationFrame(move);\n\n    // draw image on canvas\n    c.drawImage(img, 0, 0);\n\n    // this is also refactored into for loop from the back to prevent flickering when removing the enemies\n    // because you want them to be rendered and removed\n    for (let i = enemies.length-1; i >=0; i--) {\n      const enemy = enemies[i];\n      enemy.update(c);\n\n      if (enemy.position.x > canvas.width) {\n        hearts -= 1;\n        enemies.splice(i, 1);\n        document.querySelector('#hearts').innerHTML = hearts;\n\n        if (hearts === 0) {\n          cancelAnimationFrame(moveId);\n\n          c.font = \"bold 75px Archivo Black\";\n          c.fillStyle = \"white\";\n          c.strokeStyle = \"black\";\n          c.textAlign = \"center\";\n          c.lineWidth = 7;\n\n          c.strokeText(\"Game Over\", canvas.width / 2, canvas.height/2);\n          c.fillText(\"Game Over\", canvas.width / 2, canvas.height/2);\n        }\n      }\n    }\n\n    //once enemies array is empty, respawn enemies\n    if (enemies.length === 0) {\n      enemyCount += 3;\n      enemySpawn(enemyCount);\n    }\n\n    catPlacementTiles.forEach((tile) => {\n      // tile.draw();  //not passing in mouse when creating new tile\n      tile.update(mouse);\n    })\n\n    //radius detector for enemies for targeting\n    cats.forEach((cat) => {\n      cat.update(c);\n      cat.target = null;\n      const targetEnemies = enemies.filter(enemy => {\n        const xDistance = enemy.position.x - cat.center.x;\n        const yDistance = enemy.position.y - cat.center.y;\n        const distance = Math.hypot(xDistance, yDistance);\n        // overlapping\n        return distance < enemy.radius + cat.radius\n      })\n      cat.target = targetEnemies[0]\n\n      //use a for loop instead of forEach because when using splice, it will make the rendering process skip over one projectile which will make the animation flicker\n      //if projectiles are deleted from the back, since it is already rendered out, it won't make a flicker problem when spliced\n      for (let i = cat.projectiles.length-1; i >=0; i--) {\n        const projectile = cat.projectiles[i];\n\n        projectile.update(c);\n\n        const xDistance = projectile.enemy.position.x - projectile.position.x;\n        const yDistance = projectile.enemy.position.y - projectile.position.y;\n        const distance = Math.hypot(xDistance, yDistance);\n\n        // when projectile hits the enemy\n        if (distance < projectile.enemy.radius + projectile.radius) {\n          //decrease enemy health & remove from enemies array\n          projectile.enemy.health -= 20;\n\n          //keep track of individual enemy with health property 0\n          if (projectile.enemy.health <= 0) {\n            const enemyIndex = enemies.findIndex((enemy) => {\n              return projectile.enemy === enemy\n            })\n\n            if (enemyIndex > -1) {\n              enemies.splice(enemyIndex, 1);\n              gold += 20;\n            }\n          }\n\n          cat.projectiles.splice(i, 1);\n        }\n      }\n    })\n  }\n\n  let mouse = {\n    x: undefined,\n    y: undefined\n  }\n\n  canvas.addEventListener(\"click\", (event) => {\n    if (activeTile && !activeTile.isOccupied && diamonds - 50 >= 0) {\n      diamonds -= 50;\n      document.querySelector('#diamonds').innerHTML = diamonds;\n      cats.push(new Cat ({position:{\n        x: activeTile.position.x,\n        y: activeTile.position.y\n      }}))\n    }\n    activeTile.isOccupied = true;\n  })\n\n  canvas.addEventListener(\"mousemove\", (event) => {\n    mouse.x = event.clientX;\n    mouse.y = event.clientY;\n\n    activeTile = null;\n    for (let i = 0; i < catPlacementTiles.length; i ++) {\n      const tile = catPlacementTiles[i];\n\n      if (mouse.x > tile.position.x && mouse.x < tile.position.x + tile.size &&\n        mouse.y > tile.position.y && mouse.y < tile.position.y + tile.size) {\n          activeTile = tile;\n          break;\n        }\n    }\n  })\n\n  // <a href=\"https://github.com/michellechung099/CatDefense\" id=\"live-link\"><i class=\"fa fa-github\"></i></a>\n"],"names":["Victor","x","y","this","module","exports","fromArray","arr","fromObject","obj","prototype","addX","vec","addY","add","addScalar","scalar","addScalarX","addScalarY","subtractX","subtractY","subtract","subtractScalar","subtractScalarX","subtractScalarY","divideX","vector","divideY","divide","divideScalar","divideScalarX","divideScalarY","invertX","invertY","invert","multiplyX","multiplyY","multiply","multiplyScalar","multiplyScalarX","multiplyScalarY","normalize","length","norm","limit","max","factor","Math","abs","randomize","topLeft","bottomRight","randomizeX","randomizeY","min","random","randomizeAny","round","unfloat","toFixed","precision","mixX","amount","mixY","mix","clone","copyX","copyY","copy","zero","dot","vec2","cross","projectOnto","coeff","horizontalAngle","atan2","horizontalAngleDeg","radian2degrees","verticalAngle","verticalAngleDeg","angle","angleDeg","direction","rotate","nx","cos","sin","ny","rotateDeg","degrees2radian","rotateTo","rotation","rotateToDeg","rotateBy","rotateByDeg","distanceX","absDistanceX","distanceY","absDistanceY","distance","sqrt","distanceSq","dx","dy","lengthSq","magnitude","isZero","isEqualTo","toString","toArray","toObject","degrees","PI","floor","rad","deg","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","call","waypoints","catPlacement","Enemy","constructor","_ref","position","waypointIndex","width","height","radius","health","velocity","image","Image","src","drawEnemy","c","drawImage","fillStyle","fillRect","update","waypoint","yDistance","xDistance","Projectile","enemy","speed","draw","projectilePos","Cat","size","center","projectiles","enemies","occupied","target","frames","beginPath","arc","fill","push","canvas","document","getElementById","getContext","img","onload","move","placementPositions","i","slice","CatTile","color","mouse","catPlacementTiles","forEach","row","col","cats","activeTile","enemyCount","diamonds","hearts","enemySpawn","count","enemyDistance","newEnemy","moveId","requestAnimationFrame","splice","querySelector","innerHTML","cancelAnimationFrame","font","strokeStyle","textAlign","lineWidth","strokeText","fillText","tile","cat","targetEnemies","filter","hypot","projectile","enemyIndex","findIndex","gold","addEventListener","event","isOccupied","clientX","clientY"],"sourceRoot":""}