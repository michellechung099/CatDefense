/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cat.js":
/*!********************!*\
  !*** ./src/cat.js ***!
  \********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Cat; }\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\n\nclass Cat {\n  constructor(_ref) {\n    let {\n      position = {\n        x: 0,\n        y: 0\n      }\n    } = _ref;\n    this.position = position;\n    this.size = 64;\n    this.center = {\n      x: this.position.x + this.size / 2,\n      y: this.position.y + this.size / 2\n    };\n    this.projectiles = [new _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      position: {\n        x: this.center.x,\n        y: this.center.y\n      },\n      enemy: _index__WEBPACK_IMPORTED_MODULE_1__.enemies[0]\n    })];\n    this.occupied = false;\n    //radius of which the cat can shoot at enemies\n    this.radius = 250;\n    this.target;\n    this.frames = 0;\n    this.image = new Image();\n    this.image.src = \"assets/sunglassescat.png\";\n  }\n  draw(c) {\n    c.drawImage(this.image, this.position.x, this.position.y);\n    // c.fillStyle = \"purple\";\n    // c.fillRect(this.position.x, this.position.y, this.size, this.size);\n    c.beginPath();\n    c.arc(this.center.x, this.center.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = 'rgba(0,0,255,0)';\n    c.fill();\n  }\n  update(c) {\n    this.draw(c);\n    if (this.frames % 90 === 0 && this.target) {\n      this.projectiles.push(new _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        position: {\n          x: this.center.x,\n          y: this.center.y\n        },\n        enemy: this.target\n      }));\n    }\n    this.frames++;\n  }\n\n  // shoot() {\n  //   this.projectiles.push(\n  //     new Projectile({\n  //       position: {\n  //         x: this.center.x - 20,\n  //         y: this.center.y - 110\n  //       },\n  //       enemy: this.target\n  //     })\n  //   )\n  // }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2F0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNOO0FBRWhCLE1BQU1FLEdBQUcsQ0FBQztFQUN2QkMsV0FBV0EsQ0FBQUMsSUFBQSxFQUEyQjtJQUFBLElBQTFCO01BQUNDLFFBQVEsR0FBRztRQUFDQyxDQUFDLEVBQUUsQ0FBQztRQUFFQyxDQUFDLEVBQUM7TUFBQztJQUFDLENBQUMsR0FBQUgsSUFBQTtJQUNsQyxJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNHLElBQUksR0FBRyxFQUFFO0lBQ2QsSUFBSSxDQUFDQyxNQUFNLEdBQUc7TUFDWkgsQ0FBQyxFQUFFLElBQUksQ0FBQ0QsUUFBUSxDQUFDQyxDQUFDLEdBQUcsSUFBSSxDQUFDRSxJQUFJLEdBQUMsQ0FBQztNQUNoQ0QsQ0FBQyxFQUFFLElBQUksQ0FBQ0YsUUFBUSxDQUFDRSxDQUFDLEdBQUcsSUFBSSxDQUFDQyxJQUFJLEdBQUM7SUFDakMsQ0FBQztJQUNELElBQUksQ0FBQ0UsV0FBVyxHQUFHLENBQ2pCLElBQUlWLG1EQUFVLENBQUM7TUFBQ0ssUUFBUSxFQUFFO1FBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNHLE1BQU0sQ0FBQ0gsQ0FBQztRQUFFQyxDQUFDLEVBQUUsSUFBSSxDQUFDRSxNQUFNLENBQUNGO01BQUUsQ0FBQztNQUFFSSxLQUFLLEVBQUVWLDhDQUFVO0lBQUEsQ0FBQyxDQUFDLENBQ3JGO0lBQ0QsSUFBSSxDQUFDVyxRQUFRLEdBQUcsS0FBSztJQUNyQjtJQUNBLElBQUksQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7SUFDakIsSUFBSSxDQUFDQyxNQUFNO0lBQ1gsSUFBSSxDQUFDQyxNQUFNLEdBQUcsQ0FBQztJQUNmLElBQUksQ0FBQ0MsS0FBSyxHQUFHLElBQUlDLEtBQUssRUFBRTtJQUN4QixJQUFJLENBQUNELEtBQUssQ0FBQ0UsR0FBRyxHQUFHLDBCQUEwQjtFQUM3QztFQUVBQyxJQUFJQSxDQUFDQyxDQUFDLEVBQUU7SUFDTkEsQ0FBQyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDWCxRQUFRLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsQ0FBQyxDQUFDO0lBQ3pEO0lBQ0E7SUFDQWEsQ0FBQyxDQUFDRSxTQUFTLEVBQUU7SUFDYkYsQ0FBQyxDQUFDRyxHQUFHLENBQUMsSUFBSSxDQUFDZCxNQUFNLENBQUNILENBQUMsRUFBRSxJQUFJLENBQUNHLE1BQU0sQ0FBQ0YsQ0FBQyxFQUFFLElBQUksQ0FBQ00sTUFBTSxFQUFFLENBQUMsRUFBRVcsSUFBSSxDQUFDQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2hFTCxDQUFDLENBQUNNLFNBQVMsR0FBRyxpQkFBaUI7SUFDL0JOLENBQUMsQ0FBQ08sSUFBSSxFQUFFO0VBQ1Y7RUFFQUMsTUFBTUEsQ0FBQ1IsQ0FBQyxFQUFFO0lBQ1IsSUFBSSxDQUFDRCxJQUFJLENBQUNDLENBQUMsQ0FBQztJQUNaLElBQUksSUFBSSxDQUFDTCxNQUFNLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUNELE1BQU0sRUFBRTtNQUN6QyxJQUFJLENBQUNKLFdBQVcsQ0FBQ21CLElBQUksQ0FDbkIsSUFBSTdCLG1EQUFVLENBQUM7UUFBQ0ssUUFBUSxFQUFFO1VBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNHLE1BQU0sQ0FBQ0gsQ0FBQztVQUFFQyxDQUFDLEVBQUUsSUFBSSxDQUFDRSxNQUFNLENBQUNGO1FBQUUsQ0FBQztRQUFFSSxLQUFLLEVBQUUsSUFBSSxDQUFDRztNQUFNLENBQUMsQ0FBQyxDQUN0RjtJQUNIO0lBQ0EsSUFBSSxDQUFDQyxNQUFNLEVBQUU7RUFDZjs7RUFHQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X3Byb2plY3QvLi9zcmMvY2F0LmpzPzg2OWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb2plY3RpbGUgZnJvbSBcIi4vcHJvamVjdGlsZVwiXG5pbXBvcnQge2VuZW1pZXN9IGZyb20gJy4vaW5kZXgnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhdCB7XG4gIGNvbnN0cnVjdG9yKHtwb3NpdGlvbiA9IHt4OiAwLCB5OjB9fSkge1xuICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICB0aGlzLnNpemUgPSA2NDtcbiAgICB0aGlzLmNlbnRlciA9IHtcbiAgICAgIHg6IHRoaXMucG9zaXRpb24ueCArIHRoaXMuc2l6ZS8yLFxuICAgICAgeTogdGhpcy5wb3NpdGlvbi55ICsgdGhpcy5zaXplLzJcbiAgICB9XG4gICAgdGhpcy5wcm9qZWN0aWxlcyA9IFtcbiAgICAgIG5ldyBQcm9qZWN0aWxlKHtwb3NpdGlvbjoge3g6IHRoaXMuY2VudGVyLngsIHk6IHRoaXMuY2VudGVyLnkgfSwgZW5lbXk6IGVuZW1pZXNbMF19KVxuICAgIF07XG4gICAgdGhpcy5vY2N1cGllZCA9IGZhbHNlO1xuICAgIC8vcmFkaXVzIG9mIHdoaWNoIHRoZSBjYXQgY2FuIHNob290IGF0IGVuZW1pZXNcbiAgICB0aGlzLnJhZGl1cyA9IDI1MDtcbiAgICB0aGlzLnRhcmdldDtcbiAgICB0aGlzLmZyYW1lcyA9IDA7XG4gICAgdGhpcy5pbWFnZSA9IG5ldyBJbWFnZSgpXG4gICAgdGhpcy5pbWFnZS5zcmMgPSBcImFzc2V0cy9zdW5nbGFzc2VzY2F0LnBuZ1wiXG4gIH1cblxuICBkcmF3KGMpIHtcbiAgICBjLmRyYXdJbWFnZSh0aGlzLmltYWdlLCB0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSlcbiAgICAvLyBjLmZpbGxTdHlsZSA9IFwicHVycGxlXCI7XG4gICAgLy8gYy5maWxsUmVjdCh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy5zaXplLCB0aGlzLnNpemUpO1xuICAgIGMuYmVnaW5QYXRoKCk7XG4gICAgYy5hcmModGhpcy5jZW50ZXIueCwgdGhpcy5jZW50ZXIueSwgdGhpcy5yYWRpdXMsIDAsIE1hdGguUEkgKiAyKTtcbiAgICBjLmZpbGxTdHlsZSA9ICdyZ2JhKDAsMCwyNTUsMCknXG4gICAgYy5maWxsKCk7XG4gIH1cblxuICB1cGRhdGUoYykge1xuICAgIHRoaXMuZHJhdyhjKTtcbiAgICBpZiAodGhpcy5mcmFtZXMgJSA5MCA9PT0gMCAmJiB0aGlzLnRhcmdldCkge1xuICAgICAgdGhpcy5wcm9qZWN0aWxlcy5wdXNoKFxuICAgICAgICBuZXcgUHJvamVjdGlsZSh7cG9zaXRpb246IHt4OiB0aGlzLmNlbnRlci54LCB5OiB0aGlzLmNlbnRlci55IH0sIGVuZW15OiB0aGlzLnRhcmdldH0pXG4gICAgICApXG4gICAgfVxuICAgIHRoaXMuZnJhbWVzKys7XG4gIH1cblxuXG4gIC8vIHNob290KCkge1xuICAvLyAgIHRoaXMucHJvamVjdGlsZXMucHVzaChcbiAgLy8gICAgIG5ldyBQcm9qZWN0aWxlKHtcbiAgLy8gICAgICAgcG9zaXRpb246IHtcbiAgLy8gICAgICAgICB4OiB0aGlzLmNlbnRlci54IC0gMjAsXG4gIC8vICAgICAgICAgeTogdGhpcy5jZW50ZXIueSAtIDExMFxuICAvLyAgICAgICB9LFxuICAvLyAgICAgICBlbmVteTogdGhpcy50YXJnZXRcbiAgLy8gICAgIH0pXG4gIC8vICAgKVxuICAvLyB9XG5cbn1cbiJdLCJuYW1lcyI6WyJQcm9qZWN0aWxlIiwiZW5lbWllcyIsIkNhdCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsInBvc2l0aW9uIiwieCIsInkiLCJzaXplIiwiY2VudGVyIiwicHJvamVjdGlsZXMiLCJlbmVteSIsIm9jY3VwaWVkIiwicmFkaXVzIiwidGFyZ2V0IiwiZnJhbWVzIiwiaW1hZ2UiLCJJbWFnZSIsInNyYyIsImRyYXciLCJjIiwiZHJhd0ltYWdlIiwiYmVnaW5QYXRoIiwiYXJjIiwiTWF0aCIsIlBJIiwiZmlsbFN0eWxlIiwiZmlsbCIsInVwZGF0ZSIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/cat.js\n");

/***/ }),

/***/ "./src/catPlacement.js":
/*!*****************************!*\
  !*** ./src/catPlacement.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"catPlacement\": function() { return /* binding */ catPlacement; }\n/* harmony export */ });\nconst catPlacement = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2F0UGxhY2VtZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUNyRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUM5RCxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUM5RSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUM5RCxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUNoRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUMxRCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUMxRCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUM1RCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUM1RCxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUNsRixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUM5RCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9wcm9qZWN0Ly4vc3JjL2NhdFBsYWNlbWVudC5qcz9kODlkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjYXRQbGFjZW1lbnQgPSBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDAsIDAsXG4gIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCAwLFxuICAwLCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCA5NjUsIDAsXG4gIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCAwLFxuICA5NjUsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDk2NSwgOTY1LFxuICAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLFxuICAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLFxuICAwLCAwLCAwLCAwLCAwLCA5NjUsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsXG4gIDAsIDAsIDAsIDAsIDAsIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCxcbiAgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSxcbiAgMCwgMCwgMCwgMCwgMCwgOTY1LCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCA5NjUsIDAsIDAsIDAsIDAsIDAsXG4gIDAsIDAsIDAsIDAsIDAsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDAsIDAsIDAsIDAsIDAsIDBdO1xuIl0sIm5hbWVzIjpbImNhdFBsYWNlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/catPlacement.js\n");

/***/ }),

/***/ "./src/enemy.js":
/*!**********************!*\
  !*** ./src/enemy.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Enemy; }\n/* harmony export */ });\n/* harmony import */ var _waypoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waypoint.js */ \"./src/waypoint.js\");\n\nclass Enemy {\n  constructor(_ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    this.position = {\n      x,\n      y\n    };\n    this.waypointIndex = 0;\n    this.width = 90;\n    this.height = 90;\n    // this.center = {\n    //   x: this.position.x + CONSTANTS.ENEMY_WIDTH/2,\n    //   y: this.position.y + CONSTANTS.ENEMY_HEIGHT/2\n    // }\n    this.radius = 50;\n    this.health = 100;\n    // this.velocity = {x:0, y:0}\n    // this.speed = 5;\n    this.image = new Image();\n    this.image.src = \"assets/oneCapybara.png\";\n  }\n  drawEnemy(c) {\n    // c.fillStyle = \"blue\";\n    // c.beginPath();\n    // c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2)\n    // c.fill();\n\n    // const crop = { position: {x: 0, y:0 }, width: this.image.width/8, height: this.image.height}\n    c.drawImage(this.image, this.position.x, this.position.y);\n\n    //health bar\n    c.fillStyle = 'black';\n    c.fillRect(this.position.x - this.width / 2, this.position.y - 60, this.width, 8);\n    c.fillStyle = 'purple';\n    c.fillRect(this.position.x - this.width / 2, this.position.y - 60, this.width * this.health / 100, 8);\n  }\n  update(c) {\n    // draw the enemy and update its position\n    this.drawEnemy(c);\n    const waypoint = _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints[this.waypointIndex];\n    const yDistance = waypoint.y - this.position.y;\n    const xDistance = waypoint.x - this.position.x;\n    const angle = Math.atan2(yDistance, xDistance);\n\n    // this.velocity.x = Math.cos(angle)\n    // this.velocity.y = Math.sin(angle)\n\n    this.position.x += Math.cos(angle);\n    this.position.y += Math.sin(angle);\n    if (Math.round(this.position.x) === Math.round(waypoint.x) && Math.round(this.position.y) === Math.round(waypoint.y) && this.waypointIndex < _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints.length - 1) {\n      this.waypointIndex++;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW5lbXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFFMUIsTUFBTUMsS0FBSyxDQUFDO0VBQ3pCQyxXQUFXQSxDQUFBQyxJQUFBLEVBQVE7SUFBQSxJQUFQO01BQUNDLENBQUM7TUFBQ0M7SUFBQyxDQUFDLEdBQUFGLElBQUE7SUFDZixJQUFJLENBQUNHLFFBQVEsR0FBRztNQUFDRixDQUFDO01BQUVDO0lBQUMsQ0FBQztJQUN0QixJQUFJLENBQUNFLGFBQWEsR0FBRyxDQUFDO0lBQ3RCLElBQUksQ0FBQ0MsS0FBSyxHQUFHLEVBQUU7SUFDZixJQUFJLENBQUNDLE1BQU0sR0FBRyxFQUFFO0lBQ2hCO0lBQ0E7SUFDQTtJQUNBO0lBQ0EsSUFBSSxDQUFDQyxNQUFNLEdBQUcsRUFBRTtJQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBRyxHQUFHO0lBQ2pCO0lBQ0E7SUFDQSxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJQyxLQUFLLEVBQUU7SUFDeEIsSUFBSSxDQUFDRCxLQUFLLENBQUNFLEdBQUcsR0FBRyx3QkFBd0I7RUFDM0M7RUFFQUMsU0FBU0EsQ0FBQ0MsQ0FBQyxFQUFFO0lBQ1g7SUFDQTtJQUNBO0lBQ0E7O0lBRUE7SUFDQUEsQ0FBQyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDTixRQUFRLENBQUNGLENBQUMsRUFBRSxJQUFJLENBQUNFLFFBQVEsQ0FBQ0QsQ0FBQyxDQUFDOztJQUV6RDtJQUNBVyxDQUFDLENBQUNFLFNBQVMsR0FBRyxPQUFPO0lBQ3JCRixDQUFDLENBQUNHLFFBQVEsQ0FBRSxJQUFJLENBQUNiLFFBQVEsQ0FBQ0YsQ0FBQyxHQUFHLElBQUksQ0FBQ0ksS0FBSyxHQUFDLENBQUMsRUFBRyxJQUFJLENBQUNGLFFBQVEsQ0FBQ0QsQ0FBQyxHQUFDLEVBQUUsRUFBRSxJQUFJLENBQUNHLEtBQUssRUFBRSxDQUFDLENBQUM7SUFFL0VRLENBQUMsQ0FBQ0UsU0FBUyxHQUFHLFFBQVE7SUFDdEJGLENBQUMsQ0FBQ0csUUFBUSxDQUFFLElBQUksQ0FBQ2IsUUFBUSxDQUFDRixDQUFDLEdBQUcsSUFBSSxDQUFDSSxLQUFLLEdBQUMsQ0FBQyxFQUFHLElBQUksQ0FBQ0YsUUFBUSxDQUFDRCxDQUFDLEdBQUMsRUFBRSxFQUFHLElBQUksQ0FBQ0csS0FBSyxHQUFHLElBQUksQ0FBQ0csTUFBTSxHQUFDLEdBQUcsRUFBRyxDQUFDLENBQUM7RUFFckc7RUFFQVMsTUFBTUEsQ0FBQ0osQ0FBQyxFQUFFO0lBQ1I7SUFDQSxJQUFJLENBQUNELFNBQVMsQ0FBQ0MsQ0FBQyxDQUFDO0lBRWpCLE1BQU1LLFFBQVEsR0FBR3JCLG1EQUFTLENBQUMsSUFBSSxDQUFDTyxhQUFhLENBQUM7SUFDOUMsTUFBTWUsU0FBUyxHQUFHRCxRQUFRLENBQUNoQixDQUFDLEdBQUcsSUFBSSxDQUFDQyxRQUFRLENBQUNELENBQUM7SUFDOUMsTUFBTWtCLFNBQVMsR0FBR0YsUUFBUSxDQUFDakIsQ0FBQyxHQUFHLElBQUksQ0FBQ0UsUUFBUSxDQUFDRixDQUFDO0lBQzlDLE1BQU1vQixLQUFLLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDSixTQUFTLEVBQUVDLFNBQVMsQ0FBQzs7SUFFOUM7SUFDQTs7SUFFQSxJQUFJLENBQUNqQixRQUFRLENBQUNGLENBQUMsSUFBSXFCLElBQUksQ0FBQ0UsR0FBRyxDQUFDSCxLQUFLLENBQUM7SUFDbEMsSUFBSSxDQUFDbEIsUUFBUSxDQUFDRCxDQUFDLElBQUlvQixJQUFJLENBQUNHLEdBQUcsQ0FBQ0osS0FBSyxDQUFDO0lBRWxDLElBQUlDLElBQUksQ0FBQ0ksS0FBSyxDQUFDLElBQUksQ0FBQ3ZCLFFBQVEsQ0FBQ0YsQ0FBQyxDQUFDLEtBQUtxQixJQUFJLENBQUNJLEtBQUssQ0FBQ1IsUUFBUSxDQUFDakIsQ0FBQyxDQUFDLElBQUlxQixJQUFJLENBQUNJLEtBQUssQ0FBQyxJQUFJLENBQUN2QixRQUFRLENBQUNELENBQUMsQ0FBQyxLQUFLb0IsSUFBSSxDQUFDSSxLQUFLLENBQUNSLFFBQVEsQ0FBQ2hCLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0UsYUFBYSxHQUFHUCwwREFBZ0IsR0FBRyxDQUFDLEVBQUU7TUFDakssSUFBSSxDQUFDTyxhQUFhLEVBQUc7SUFDdkI7RUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9wcm9qZWN0Ly4vc3JjL2VuZW15LmpzPzllYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2F5cG9pbnRzIH0gZnJvbSBcIi4vd2F5cG9pbnQuanNcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmVteSB7XG4gIGNvbnN0cnVjdG9yKHt4LHl9KSB7XG4gICAgdGhpcy5wb3NpdGlvbiA9IHt4LCB5fTtcbiAgICB0aGlzLndheXBvaW50SW5kZXggPSAwO1xuICAgIHRoaXMud2lkdGggPSA5MDtcbiAgICB0aGlzLmhlaWdodCA9IDkwO1xuICAgIC8vIHRoaXMuY2VudGVyID0ge1xuICAgIC8vICAgeDogdGhpcy5wb3NpdGlvbi54ICsgQ09OU1RBTlRTLkVORU1ZX1dJRFRILzIsXG4gICAgLy8gICB5OiB0aGlzLnBvc2l0aW9uLnkgKyBDT05TVEFOVFMuRU5FTVlfSEVJR0hULzJcbiAgICAvLyB9XG4gICAgdGhpcy5yYWRpdXMgPSA1MDtcbiAgICB0aGlzLmhlYWx0aCA9IDEwMDtcbiAgICAvLyB0aGlzLnZlbG9jaXR5ID0ge3g6MCwgeTowfVxuICAgIC8vIHRoaXMuc3BlZWQgPSA1O1xuICAgIHRoaXMuaW1hZ2UgPSBuZXcgSW1hZ2UoKVxuICAgIHRoaXMuaW1hZ2Uuc3JjID0gXCJhc3NldHMvb25lQ2FweWJhcmEucG5nXCJcbiAgfVxuXG4gIGRyYXdFbmVteShjKSB7XG4gICAgLy8gYy5maWxsU3R5bGUgPSBcImJsdWVcIjtcbiAgICAvLyBjLmJlZ2luUGF0aCgpO1xuICAgIC8vIGMuYXJjKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIpXG4gICAgLy8gYy5maWxsKCk7XG5cbiAgICAvLyBjb25zdCBjcm9wID0geyBwb3NpdGlvbjoge3g6IDAsIHk6MCB9LCB3aWR0aDogdGhpcy5pbWFnZS53aWR0aC84LCBoZWlnaHQ6IHRoaXMuaW1hZ2UuaGVpZ2h0fVxuICAgIGMuZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55KVxuXG4gICAgLy9oZWFsdGggYmFyXG4gICAgYy5maWxsU3R5bGUgPSAnYmxhY2snO1xuICAgIGMuZmlsbFJlY3QoKHRoaXMucG9zaXRpb24ueCAtIHRoaXMud2lkdGgvMiksIHRoaXMucG9zaXRpb24ueS02MCwgdGhpcy53aWR0aCwgOClcblxuICAgIGMuZmlsbFN0eWxlID0gJ3B1cnBsZSc7XG4gICAgYy5maWxsUmVjdCgodGhpcy5wb3NpdGlvbi54IC0gdGhpcy53aWR0aC8yKSwgdGhpcy5wb3NpdGlvbi55LTYwLCAodGhpcy53aWR0aCAqIHRoaXMuaGVhbHRoLzEwMCksIDgpXG5cbiAgfVxuXG4gIHVwZGF0ZShjKSB7XG4gICAgLy8gZHJhdyB0aGUgZW5lbXkgYW5kIHVwZGF0ZSBpdHMgcG9zaXRpb25cbiAgICB0aGlzLmRyYXdFbmVteShjKTtcblxuICAgIGNvbnN0IHdheXBvaW50ID0gd2F5cG9pbnRzW3RoaXMud2F5cG9pbnRJbmRleF1cbiAgICBjb25zdCB5RGlzdGFuY2UgPSB3YXlwb2ludC55IC0gdGhpcy5wb3NpdGlvbi55XG4gICAgY29uc3QgeERpc3RhbmNlID0gd2F5cG9pbnQueCAtIHRoaXMucG9zaXRpb24ueFxuICAgIGNvbnN0IGFuZ2xlID0gTWF0aC5hdGFuMih5RGlzdGFuY2UsIHhEaXN0YW5jZSlcblxuICAgIC8vIHRoaXMudmVsb2NpdHkueCA9IE1hdGguY29zKGFuZ2xlKVxuICAgIC8vIHRoaXMudmVsb2NpdHkueSA9IE1hdGguc2luKGFuZ2xlKVxuXG4gICAgdGhpcy5wb3NpdGlvbi54ICs9IE1hdGguY29zKGFuZ2xlKVxuICAgIHRoaXMucG9zaXRpb24ueSArPSBNYXRoLnNpbihhbmdsZSlcblxuICAgIGlmIChNYXRoLnJvdW5kKHRoaXMucG9zaXRpb24ueCkgPT09IE1hdGgucm91bmQod2F5cG9pbnQueCkgJiYgTWF0aC5yb3VuZCh0aGlzLnBvc2l0aW9uLnkpID09PSBNYXRoLnJvdW5kKHdheXBvaW50LnkpICYmIHRoaXMud2F5cG9pbnRJbmRleCA8IHdheXBvaW50cy5sZW5ndGggLSAxKSB7XG4gICAgICB0aGlzLndheXBvaW50SW5kZXggKys7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsid2F5cG9pbnRzIiwiRW5lbXkiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJ4IiwieSIsInBvc2l0aW9uIiwid2F5cG9pbnRJbmRleCIsIndpZHRoIiwiaGVpZ2h0IiwicmFkaXVzIiwiaGVhbHRoIiwiaW1hZ2UiLCJJbWFnZSIsInNyYyIsImRyYXdFbmVteSIsImMiLCJkcmF3SW1hZ2UiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInVwZGF0ZSIsIndheXBvaW50IiwieURpc3RhbmNlIiwieERpc3RhbmNlIiwiYW5nbGUiLCJNYXRoIiwiYXRhbjIiLCJjb3MiLCJzaW4iLCJyb3VuZCIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/enemy.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enemies\": function() { return /* binding */ enemies; }\n/* harmony export */ });\n/* harmony import */ var _waypoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waypoint.js */ \"./src/waypoint.js\");\n/* harmony import */ var _catPlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catPlacement.js */ \"./src/catPlacement.js\");\n/* harmony import */ var _enemy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enemy.js */ \"./src/enemy.js\");\n/* harmony import */ var _cat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cat.js */ \"./src/cat.js\");\n/* harmony import */ var _projectile_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projectile.js */ \"./src/projectile.js\");\n/* harmony import */ var victor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! victor */ \"./node_modules/victor/index.js\");\n/* harmony import */ var victor__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(victor__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n// import catTile from \"./catTile.js\"\n\n\n\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\nconst canvas = document.querySelector(\"canvas\");\nconst c = canvas.getContext(\"2d\");\ncanvas.width = 1280;\ncanvas.height = 768;\nc.fillStyle = \"white\";\nc.fillRect(0, 0, canvas.width, canvas.height);\n\n// creates and returns a new HTMLImageElement\nconst img = new Image();\nimg.onload = () => {\n  move();\n};\nimg.src = \"assets/finalMap.png\";\n\n// 2D array of all possible catTile placement positions\nconst placementPositions = [];\nfor (let i = 0; i < _catPlacement_js__WEBPACK_IMPORTED_MODULE_1__.catPlacement.length; i += 20) {\n  placementPositions.push(_catPlacement_js__WEBPACK_IMPORTED_MODULE_1__.catPlacement.slice(i, i + 20));\n}\nclass CatTile {\n  constructor(_ref) {\n    let {\n      position = {\n        x: 0,\n        y: 0\n      }\n    } = _ref;\n    this.position = position;\n    this.size = 64; //64 pixels per tile\n    this.color = \"rgba(255, 255, 255, 0.2)\";\n    this.occupied = false;\n  }\n  draw() {\n    // c.fillStyle = this.color;\n    // 255 in each red green and blue makes it white\n    c.fillStyle = this.color;\n    c.fillRect(this.position.x, this.position.y, this.size, this.size);\n  }\n  update(mouse) {\n    this.draw();\n    if (mouse.x > this.position.x && mouse.x < this.position.x + this.size && mouse.y > this.position.y && mouse.y < this.position.y + this.size) {\n      this.color = \"rgba(255, 255, 255, 0.2)\";\n    } else {\n      this.color = \"rgba(255, 255, 255, 0)\";\n    }\n  }\n\n  //also create a logic that alerts the user that you can't place the tile here if the position is out of bounds\n}\n\nconst catPlacementTiles = [];\nplacementPositions.forEach((row, y) => {\n  row.forEach((col, x) => {\n    if (col === 965) {\n      // place a Tile at the position (x,y) if col has a value\n      catPlacementTiles.push(new CatTile({\n        position: {\n          x: x * 64,\n          y: y * 64\n        }\n      }));\n    }\n  });\n});\nconst enemies = [];\nconst cats = [];\nlet activeTile = undefined;\nlet enemyCount = 5;\nfunction enemySpawn(count) {\n  for (let i = 1; i < count + 1; i++) {\n    let enemyDistance = i * 130;\n    let newEnemy = new _enemy_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      x: _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints[0].x - enemyDistance,\n      y: _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints[0].y\n    });\n    enemies.push(newEnemy);\n  }\n}\nenemySpawn(enemyCount);\nfunction move() {\n  requestAnimationFrame(move);\n\n  // draw image on canvas\n  c.drawImage(img, 0, 0);\n\n  // this is also refactored into for loop from the back to prevent flickering when removing the enemies\n  // because you want them to be rendered and removed\n  for (let i = enemies.length - 1; i >= 0; i--) {\n    const enemy = enemies[i];\n    enemy.update(c);\n  }\n  catPlacementTiles.forEach(tile => {\n    // tile.draw();  //not passing in mouse when creating new tile\n    tile.update(mouse);\n  });\n\n  //radius detector for enemies for targeting\n  cats.forEach(cat => {\n    cat.update(c);\n    cat.target = null;\n    const targetEnemies = enemies.filter(enemy => {\n      const xDistance = enemy.position.x - cat.center.x;\n      const yDistance = enemy.position.y - cat.center.y;\n      const distance = Math.hypot(xDistance, yDistance);\n      // overlapping\n      return distance < enemy.radius + cat.radius;\n    });\n    cat.target = targetEnemies[0];\n\n    //use a for loop instead of forEach because when using splice, it will make the rendering process skip over one projectile which will make the animation flicker\n    //if projectiles are deleted from the back, since it is already rendered out, it won't make a flicker problem when spliced\n    for (let i = cat.projectiles.length - 1; i >= 0; i--) {\n      const projectile = cat.projectiles[i];\n      projectile.update(c);\n      const xDistance = projectile.enemy.position.x - projectile.position.x;\n      const yDistance = projectile.enemy.position.y - projectile.position.y;\n      const distance = Math.hypot(xDistance, yDistance);\n\n      // when projectile hits the enemy\n      if (distance < projectile.enemy.radius + projectile.radius) {\n        //decrease enemy health & remove from enemies array\n        projectile.enemy.health -= 20;\n\n        //keep track of individual enemy with health property 0\n        if (projectile.enemy.health <= 0) {\n          const enemyIndex = enemies.findIndex(enemy => {\n            return projectile.enemy === enemy;\n          });\n          if (enemyIndex > -1) {\n            enemies.splice(enemyIndex, 1);\n          }\n        }\n\n        //once enemies array is empty, respawn enemies\n        if (enemies.length === 0) {\n          enemyCount += 2;\n          enemySpawn(enemyCount);\n        }\n        cat.projectiles.splice(i, 1);\n      }\n    }\n  });\n}\nlet mouse = {\n  x: undefined,\n  y: undefined\n};\ncanvas.addEventListener(\"click\", event => {\n  if (activeTile && !activeTile.isOccupied) {\n    cats.push(new _cat_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n      position: {\n        x: activeTile.position.x,\n        y: activeTile.position.y\n      }\n    }));\n  }\n  activeTile.isOccupied = true;\n});\ncanvas.addEventListener(\"mousemove\", event => {\n  mouse.x = event.clientX;\n  mouse.y = event.clientY;\n  activeTile = null;\n  for (let i = 0; i < catPlacementTiles.length; i++) {\n    const tile = catPlacementTiles[i];\n    if (mouse.x > tile.position.x && mouse.x < tile.position.x + tile.size && mouse.y > tile.position.y && mouse.y < tile.position.y + tile.size) {\n      activeTile = tile;\n      break;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/projectile.js":
/*!***************************!*\
  !*** ./src/projectile.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Projectile; }\n/* harmony export */ });\n/* harmony import */ var victor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! victor */ \"./node_modules/victor/index.js\");\n/* harmony import */ var victor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(victor__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\n// import Enemy from './enemies'\n\nclass Projectile {\n  constructor(_ref) {\n    let {\n      position = {\n        x: 0,\n        y: 0\n      },\n      enemy\n    } = _ref;\n    this.position = position;\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.speed = 5;\n    this.enemy = enemy;\n    this.radius = 10;\n    this.image = new Image();\n    this.image.src = \"assets/projectile.png\";\n  }\n  draw(c) {\n    c.drawImage(this.image, this.position.x, this.position.y);\n    // c.beginPath();\n    // c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\n    // c.fillStyle = \"red\";\n    // c.fill();\n  }\n\n  update(c) {\n    this.draw(c);\n    const projectilePos = new (victor__WEBPACK_IMPORTED_MODULE_0___default())(this.position.x, this.position.y);\n    const enemyPos = new (victor__WEBPACK_IMPORTED_MODULE_0___default())(this.enemy.position.x, this.enemy.position.y);\n    const direction = enemyPos.subtract(projectilePos);\n    const timeElapsed = 1;\n    const velocity = direction.clone().normalize().multiplyScalar(this.speed);\n    projectilePos.add(velocity.clone().multiplyScalar(timeElapsed));\n    this.position.x = projectilePos.x;\n    this.position.y = projectilePos.y;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcHJvamVjdGlsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRCO0FBQzVCO0FBQytCO0FBRWhCLE1BQU1FLFVBQVUsQ0FBQztFQUM5QkMsV0FBV0EsQ0FBQUMsSUFBQSxFQUFpQztJQUFBLElBQWhDO01BQUNDLFFBQVEsR0FBRztRQUFDQyxDQUFDLEVBQUMsQ0FBQztRQUFFQyxDQUFDLEVBQUM7TUFBQyxDQUFDO01BQUVDO0lBQUssQ0FBQyxHQUFBSixJQUFBO0lBQ3hDLElBQUksQ0FBQ0MsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0ksUUFBUSxHQUFHO01BQUNILENBQUMsRUFBQyxDQUFDO01BQUVDLENBQUMsRUFBQztJQUFDLENBQUM7SUFDMUIsSUFBSSxDQUFDRyxLQUFLLEdBQUcsQ0FBQztJQUNkLElBQUksQ0FBQ0YsS0FBSyxHQUFHQSxLQUFLO0lBQ2xCLElBQUksQ0FBQ0csTUFBTSxHQUFHLEVBQUU7SUFDaEIsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSUMsS0FBSyxFQUFFO0lBQ3hCLElBQUksQ0FBQ0QsS0FBSyxDQUFDRSxHQUFHLEdBQUcsdUJBQXVCO0VBQzFDO0VBRUFDLElBQUlBLENBQUNDLENBQUMsRUFBRTtJQUNOQSxDQUFDLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNMLEtBQUssRUFBRSxJQUFJLENBQUNQLFFBQVEsQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0QsUUFBUSxDQUFDRSxDQUFDLENBQUM7SUFDekQ7SUFDQTtJQUNBO0lBQ0E7RUFDRjs7RUFFQVcsTUFBTUEsQ0FBQ0YsQ0FBQyxFQUFFO0lBQ1IsSUFBSSxDQUFDRCxJQUFJLENBQUNDLENBQUMsQ0FBQztJQUVaLE1BQU1HLGFBQWEsR0FBRyxJQUFJbkIsK0NBQU0sQ0FBQyxJQUFJLENBQUNLLFFBQVEsQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0QsUUFBUSxDQUFDRSxDQUFDLENBQUM7SUFDbEUsTUFBTWEsUUFBUSxHQUFHLElBQUlwQiwrQ0FBTSxDQUFDLElBQUksQ0FBQ1EsS0FBSyxDQUFDSCxRQUFRLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNFLEtBQUssQ0FBQ0gsUUFBUSxDQUFDRSxDQUFDLENBQUM7SUFFekUsTUFBTWMsU0FBUyxHQUFHRCxRQUFRLENBQUNFLFFBQVEsQ0FBQ0gsYUFBYSxDQUFDO0lBRWxELE1BQU1JLFdBQVcsR0FBRyxDQUFDO0lBQ3JCLE1BQU1kLFFBQVEsR0FBR1ksU0FBUyxDQUFDRyxLQUFLLEVBQUUsQ0FBQ0MsU0FBUyxFQUFFLENBQUNDLGNBQWMsQ0FBQyxJQUFJLENBQUNoQixLQUFLLENBQUM7SUFDekVTLGFBQWEsQ0FBQ1EsR0FBRyxDQUFDbEIsUUFBUSxDQUFDZSxLQUFLLEVBQUUsQ0FBQ0UsY0FBYyxDQUFDSCxXQUFXLENBQUMsQ0FBQztJQUUvRCxJQUFJLENBQUNsQixRQUFRLENBQUNDLENBQUMsR0FBR2EsYUFBYSxDQUFDYixDQUFDO0lBQ2pDLElBQUksQ0FBQ0QsUUFBUSxDQUFDRSxDQUFDLEdBQUdZLGFBQWEsQ0FBQ1osQ0FBQztFQUNuQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9wcm9qZWN0Ly4vc3JjL3Byb2plY3RpbGUuanM/OGNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmljdG9yIGZyb20gJ3ZpY3Rvcic7XG4vLyBpbXBvcnQgRW5lbXkgZnJvbSAnLi9lbmVtaWVzJ1xuaW1wb3J0IHtlbmVtaWVzfSBmcm9tICcuL2luZGV4J1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0aWxlIHtcbiAgY29uc3RydWN0b3Ioe3Bvc2l0aW9uID0ge3g6MCwgeTowfSwgZW5lbXl9KSB7XG4gICAgdGhpcy5wb3NpdGlvbiA9IHBvc2l0aW9uO1xuICAgIHRoaXMudmVsb2NpdHkgPSB7eDowLCB5OjB9XG4gICAgdGhpcy5zcGVlZCA9IDU7XG4gICAgdGhpcy5lbmVteSA9IGVuZW15O1xuICAgIHRoaXMucmFkaXVzID0gMTA7XG4gICAgdGhpcy5pbWFnZSA9IG5ldyBJbWFnZSgpXG4gICAgdGhpcy5pbWFnZS5zcmMgPSBcImFzc2V0cy9wcm9qZWN0aWxlLnBuZ1wiXG4gIH1cblxuICBkcmF3KGMpIHtcbiAgICBjLmRyYXdJbWFnZSh0aGlzLmltYWdlLCB0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSlcbiAgICAvLyBjLmJlZ2luUGF0aCgpO1xuICAgIC8vIGMuYXJjKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIpO1xuICAgIC8vIGMuZmlsbFN0eWxlID0gXCJyZWRcIjtcbiAgICAvLyBjLmZpbGwoKTtcbiAgfVxuXG4gIHVwZGF0ZShjKSB7XG4gICAgdGhpcy5kcmF3KGMpO1xuXG4gICAgY29uc3QgcHJvamVjdGlsZVBvcyA9IG5ldyBWaWN0b3IodGhpcy5wb3NpdGlvbi54LCB0aGlzLnBvc2l0aW9uLnkpO1xuICAgIGNvbnN0IGVuZW15UG9zID0gbmV3IFZpY3Rvcih0aGlzLmVuZW15LnBvc2l0aW9uLngsIHRoaXMuZW5lbXkucG9zaXRpb24ueSk7XG5cbiAgICBjb25zdCBkaXJlY3Rpb24gPSBlbmVteVBvcy5zdWJ0cmFjdChwcm9qZWN0aWxlUG9zKTtcblxuICAgIGNvbnN0IHRpbWVFbGFwc2VkID0gMTtcbiAgICBjb25zdCB2ZWxvY2l0eSA9IGRpcmVjdGlvbi5jbG9uZSgpLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKHRoaXMuc3BlZWQpO1xuICAgIHByb2plY3RpbGVQb3MuYWRkKHZlbG9jaXR5LmNsb25lKCkubXVsdGlwbHlTY2FsYXIodGltZUVsYXBzZWQpKTtcblxuICAgIHRoaXMucG9zaXRpb24ueCA9IHByb2plY3RpbGVQb3MueDtcbiAgICB0aGlzLnBvc2l0aW9uLnkgPSBwcm9qZWN0aWxlUG9zLnk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJWaWN0b3IiLCJlbmVtaWVzIiwiUHJvamVjdGlsZSIsImNvbnN0cnVjdG9yIiwiX3JlZiIsInBvc2l0aW9uIiwieCIsInkiLCJlbmVteSIsInZlbG9jaXR5Iiwic3BlZWQiLCJyYWRpdXMiLCJpbWFnZSIsIkltYWdlIiwic3JjIiwiZHJhdyIsImMiLCJkcmF3SW1hZ2UiLCJ1cGRhdGUiLCJwcm9qZWN0aWxlUG9zIiwiZW5lbXlQb3MiLCJkaXJlY3Rpb24iLCJzdWJ0cmFjdCIsInRpbWVFbGFwc2VkIiwiY2xvbmUiLCJub3JtYWxpemUiLCJtdWx0aXBseVNjYWxhciIsImFkZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/projectile.js\n");

/***/ }),

/***/ "./src/waypoint.js":
/*!*************************!*\
  !*** ./src/waypoint.js ***!
  \*************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"waypoints\": function() { return /* binding */ waypoints; }\n/* harmony export */ });\nconst waypoints = [{\n  \"x\": -67,\n  \"y\": 441\n}, {\n  \"x\": 191,\n  \"y\": 441\n}, {\n  \"x\": 190,\n  \"y\": 315\n}, {\n  \"x\": 508,\n  \"y\": 315\n}, {\n  \"x\": 507,\n  \"y\": 569\n}, {\n  \"x\": 762,\n  \"y\": 570\n}, {\n  \"x\": 764,\n  \"y\": 189\n}, {\n  \"x\": 1022,\n  \"y\": 189\n}, {\n  \"x\": 1019,\n  \"y\": 442\n}, {\n  \"x\": 1346,\n  \"y\": 447\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2F5cG9pbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFNBQVMsR0FBRyxDQUN6QjtFQUNFLEdBQUcsRUFBQyxDQUFDLEVBQUU7RUFDUCxHQUFHLEVBQUM7QUFDTCxDQUFDLEVBQ0Q7RUFDQyxHQUFHLEVBQUMsR0FBRztFQUNQLEdBQUcsRUFBQztBQUNMLENBQUMsRUFDRDtFQUNDLEdBQUcsRUFBQyxHQUFHO0VBQ1AsR0FBRyxFQUFDO0FBQ0wsQ0FBQyxFQUNEO0VBQ0MsR0FBRyxFQUFDLEdBQUc7RUFDUCxHQUFHLEVBQUM7QUFDTCxDQUFDLEVBQ0Q7RUFDQyxHQUFHLEVBQUMsR0FBRztFQUNQLEdBQUcsRUFBQztBQUNMLENBQUMsRUFDRDtFQUNDLEdBQUcsRUFBQyxHQUFHO0VBQ1AsR0FBRyxFQUFDO0FBQ0wsQ0FBQyxFQUNEO0VBQ0MsR0FBRyxFQUFDLEdBQUc7RUFDUCxHQUFHLEVBQUM7QUFDTCxDQUFDLEVBQ0Q7RUFDQyxHQUFHLEVBQUMsSUFBSTtFQUNSLEdBQUcsRUFBQztBQUNMLENBQUMsRUFDRDtFQUNDLEdBQUcsRUFBQyxJQUFJO0VBQ1IsR0FBRyxFQUFDO0FBQ0wsQ0FBQyxFQUNEO0VBQ0MsR0FBRyxFQUFDLElBQUk7RUFDUixHQUFHLEVBQUM7QUFDTCxDQUFDLENBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X3Byb2plY3QvLi9zcmMvd2F5cG9pbnQuanM/OTVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgd2F5cG9pbnRzID0gW1xue1xuICBcInhcIjotNjcsXG4gIFwieVwiOjQ0MVxuIH0sXG4ge1xuICBcInhcIjoxOTEsXG4gIFwieVwiOjQ0MVxuIH0sXG4ge1xuICBcInhcIjoxOTAsXG4gIFwieVwiOjMxNVxuIH0sXG4ge1xuICBcInhcIjo1MDgsXG4gIFwieVwiOjMxNVxuIH0sXG4ge1xuICBcInhcIjo1MDcsXG4gIFwieVwiOjU2OVxuIH0sXG4ge1xuICBcInhcIjo3NjIsXG4gIFwieVwiOjU3MFxuIH0sXG4ge1xuICBcInhcIjo3NjQsXG4gIFwieVwiOjE4OVxuIH0sXG4ge1xuICBcInhcIjoxMDIyLFxuICBcInlcIjoxODlcbiB9LFxuIHtcbiAgXCJ4XCI6MTAxOSxcbiAgXCJ5XCI6NDQyXG4gfSxcbiB7XG4gIFwieFwiOjEzNDYsXG4gIFwieVwiOjQ0N1xuIH1cbl07XG4iXSwibmFtZXMiOlsid2F5cG9pbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/waypoint.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./node_modules/victor/index.js":
/*!**************************************!*\
  !*** ./node_modules/victor/index.js ***!
  \**************************************/
/***/ (function(module, exports) {

eval("exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/victor/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;