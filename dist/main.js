/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cat.js":
/*!********************!*\
  !*** ./src/cat.js ***!
  \********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Cat; }\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\nclass Cat {\n  constructor(_ref) {\n    let {\n      position = {\n        x: 0,\n        y: 0\n      }\n    } = _ref;\n    this.position = position;\n    this.size = 64;\n    this.center = {\n      x: this.position.x + this.size / 2,\n      y: this.position.y + this.size / 2\n    };\n    this.projectiles = [new _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      position: {\n        x: this.center.x,\n        y: this.center.y\n      }\n    })];\n    this.occupied = false;\n    // this.target;\n  }\n\n  draw(c) {\n    c.fillStyle = \"purple\";\n    c.fillRect(this.position.x, this.position.y, this.size, this.size);\n  }\n\n  // shoot() {\n  //   this.projectiles.push(\n  //     new Projectile({\n  //       position: {\n  //         x: this.center.x - 20,\n  //         y: this.center.y - 110\n  //       },\n  //       enemy: this.target\n  //     })\n  //   )\n  // }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2F0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBRXZCLE1BQU1DLEdBQUcsQ0FBQztFQUN2QkMsV0FBV0EsQ0FBQUMsSUFBQSxFQUEyQjtJQUFBLElBQTFCO01BQUNDLFFBQVEsR0FBRztRQUFDQyxDQUFDLEVBQUUsQ0FBQztRQUFFQyxDQUFDLEVBQUM7TUFBQztJQUFDLENBQUMsR0FBQUgsSUFBQTtJQUNsQyxJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNHLElBQUksR0FBRyxFQUFFO0lBQ2QsSUFBSSxDQUFDQyxNQUFNLEdBQUc7TUFDWkgsQ0FBQyxFQUFFLElBQUksQ0FBQ0QsUUFBUSxDQUFDQyxDQUFDLEdBQUcsSUFBSSxDQUFDRSxJQUFJLEdBQUMsQ0FBQztNQUNoQ0QsQ0FBQyxFQUFFLElBQUksQ0FBQ0YsUUFBUSxDQUFDRSxDQUFDLEdBQUcsSUFBSSxDQUFDQyxJQUFJLEdBQUM7SUFDakMsQ0FBQztJQUNELElBQUksQ0FBQ0UsV0FBVyxHQUFHLENBQ2pCLElBQUlULG1EQUFVLENBQUM7TUFBQ0ksUUFBUSxFQUFFO1FBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNHLE1BQU0sQ0FBQ0gsQ0FBQztRQUFFQyxDQUFDLEVBQUUsSUFBSSxDQUFDRSxNQUFNLENBQUNGO01BQUU7SUFBQyxDQUFDLENBQUMsQ0FDbEU7SUFDRCxJQUFJLENBQUNJLFFBQVEsR0FBRyxLQUFLO0lBQ3JCO0VBQ0Y7O0VBRUFDLElBQUlBLENBQUNDLENBQUMsRUFBRTtJQUNOQSxDQUFDLENBQUNDLFNBQVMsR0FBRyxRQUFRO0lBQ3RCRCxDQUFDLENBQUNFLFFBQVEsQ0FBQyxJQUFJLENBQUNWLFFBQVEsQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0QsUUFBUSxDQUFDRSxDQUFDLEVBQUUsSUFBSSxDQUFDQyxJQUFJLEVBQUUsSUFBSSxDQUFDQSxJQUFJLENBQUM7RUFDcEU7O0VBRUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9wcm9qZWN0Ly4vc3JjL2NhdC5qcz84NjllIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9qZWN0aWxlIGZyb20gXCIuL3Byb2plY3RpbGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2F0IHtcbiAgY29uc3RydWN0b3Ioe3Bvc2l0aW9uID0ge3g6IDAsIHk6MH19KSB7XG4gICAgdGhpcy5wb3NpdGlvbiA9IHBvc2l0aW9uO1xuICAgIHRoaXMuc2l6ZSA9IDY0O1xuICAgIHRoaXMuY2VudGVyID0ge1xuICAgICAgeDogdGhpcy5wb3NpdGlvbi54ICsgdGhpcy5zaXplLzIsXG4gICAgICB5OiB0aGlzLnBvc2l0aW9uLnkgKyB0aGlzLnNpemUvMlxuICAgIH1cbiAgICB0aGlzLnByb2plY3RpbGVzID0gW1xuICAgICAgbmV3IFByb2plY3RpbGUoe3Bvc2l0aW9uOiB7eDogdGhpcy5jZW50ZXIueCwgeTogdGhpcy5jZW50ZXIueSB9fSlcbiAgICBdO1xuICAgIHRoaXMub2NjdXBpZWQgPSBmYWxzZTtcbiAgICAvLyB0aGlzLnRhcmdldDtcbiAgfVxuXG4gIGRyYXcoYykge1xuICAgIGMuZmlsbFN0eWxlID0gXCJwdXJwbGVcIjtcbiAgICBjLmZpbGxSZWN0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLnNpemUsIHRoaXMuc2l6ZSk7XG4gIH1cblxuICAvLyBzaG9vdCgpIHtcbiAgLy8gICB0aGlzLnByb2plY3RpbGVzLnB1c2goXG4gIC8vICAgICBuZXcgUHJvamVjdGlsZSh7XG4gIC8vICAgICAgIHBvc2l0aW9uOiB7XG4gIC8vICAgICAgICAgeDogdGhpcy5jZW50ZXIueCAtIDIwLFxuICAvLyAgICAgICAgIHk6IHRoaXMuY2VudGVyLnkgLSAxMTBcbiAgLy8gICAgICAgfSxcbiAgLy8gICAgICAgZW5lbXk6IHRoaXMudGFyZ2V0XG4gIC8vICAgICB9KVxuICAvLyAgIClcbiAgLy8gfVxuXG59XG5cblxuIl0sIm5hbWVzIjpbIlByb2plY3RpbGUiLCJDYXQiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJwb3NpdGlvbiIsIngiLCJ5Iiwic2l6ZSIsImNlbnRlciIsInByb2plY3RpbGVzIiwib2NjdXBpZWQiLCJkcmF3IiwiYyIsImZpbGxTdHlsZSIsImZpbGxSZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/cat.js\n");

/***/ }),

/***/ "./src/catPlacement.js":
/*!*****************************!*\
  !*** ./src/catPlacement.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"catPlacement\": function() { return /* binding */ catPlacement; }\n/* harmony export */ });\nconst catPlacement = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 965, 965, 965, 965, 965, 965, 965, 965, 965, 0, 0, 0, 0, 0, 0];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2F0UGxhY2VtZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUNyRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUM5RCxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUM5RSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUM5RCxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUNoRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUMxRCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUMxRCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUM1RCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUM1RCxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUNsRixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUM5RCxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9wcm9qZWN0Ly4vc3JjL2NhdFBsYWNlbWVudC5qcz9kODlkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjYXRQbGFjZW1lbnQgPSBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDAsIDAsXG4gIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCAwLFxuICAwLCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCA5NjUsIDAsXG4gIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCAwLFxuICA5NjUsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDk2NSwgOTY1LFxuICAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLFxuICAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLFxuICAwLCAwLCAwLCAwLCAwLCA5NjUsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsXG4gIDAsIDAsIDAsIDAsIDAsIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCxcbiAgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSxcbiAgMCwgMCwgMCwgMCwgMCwgOTY1LCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCA5NjUsIDAsIDAsIDAsIDAsIDAsXG4gIDAsIDAsIDAsIDAsIDAsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDk2NSwgOTY1LCA5NjUsIDAsIDAsIDAsIDAsIDAsIDBdO1xuIl0sIm5hbWVzIjpbImNhdFBsYWNlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/catPlacement.js\n");

/***/ }),

/***/ "./src/enemy.js":
/*!**********************!*\
  !*** ./src/enemy.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Enemy; }\n/* harmony export */ });\n/* harmony import */ var _waypoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waypoint.js */ \"./src/waypoint.js\");\n\nconst CONSTANTS = {\n  ENEMY_WIDTH: 90,\n  ENEMY_HEIGHT: 90\n};\nclass Enemy {\n  constructor(_ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    this.position = {\n      x,\n      y\n    };\n    this.waypointIndex = 0;\n    this.center = {\n      x: this.position.x + CONSTANTS.ENEMY_WIDTH / 2,\n      y: this.position.y + CONSTANTS.ENEMY_HEIGHT / 2\n    };\n    // this.speed = 2\n    // this.enemies = [];\n  }\n\n  drawEnemy(c) {\n    // draw the enemy square with given position\n    c.fillStyle = \"blue\";\n    c.fillRect(this.position.x, this.position.y, CONSTANTS.ENEMY_WIDTH, CONSTANTS.ENEMY_HEIGHT);\n    //replace this with a circle \n  }\n\n  update(c) {\n    // draw the enemy and update its position\n    this.drawEnemy(c);\n    const waypoint = _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints[this.waypointIndex];\n    const yDistance = waypoint.y - this.position.y;\n    const xDistance = waypoint.x - this.position.x;\n    const angle = Math.atan2(yDistance, xDistance);\n    this.position.x += Math.cos(angle);\n    this.position.y += Math.sin(angle);\n\n    // while (this.waypointIndex < waypoints.length - 1) {\n    if (Math.round(this.position.x) === Math.round(waypoint.x) && Math.round(this.position.y) === Math.round(waypoint.y) && this.waypointIndex < _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints.length - 1) {\n      this.waypointIndex++;\n    }\n    // }\n  }\n}\n\n// export default class Enemy {\n//   constructor({x, y}) {\n//     this.position = {\n// this.position = {x, y}\n// this.waypointIndex = 0\n//     }\n\n//     // this.speed = 2; //set the default speed to 2 pixels per frame\n//     // this.health = 100;\n//     // this.velocity = {\n//     //   x: 0,\n//     //   y:0\n//     // }\n\n//   }\n\n//   // animate() {\n//   //   requestAnimationFrame(movement);\n//   //   c.drawImage(img, 0, 0);\n//   //   c.fillStyle = \"blue\";\n//   //   c.fillRect(x, 400, 90, 90);\n//   //   x++\n//   // }\n\n//   drawEnemy(c) {\n//     // draw the enemy square with given position\n//     c.fillStyle = \"blue\";\n//     c.fillRect(this.position.x, this.position.y, CONSTANTS.ENEMY_WIDTH, CONSTANTS.ENEMY_HEIGHT);\n//   }\n\n//   update(c) {\n//     // draw the enemy and update its position\n//     this.drawEnemy(c);\n//     this.position.x ++;\n\n//     // calculate distance between enemy's current position and the current waypoint, move enemy towards the waypoint\n//     // when enemy reaches the current waypoint, update the currentWaypoint property to the next waypoint along the game board\n\n//   // damageTaken() {\n\n//   // }\n\n//   // currentWaypoint() {\n//   //   // keep track of which waypoint the enemy is currently heading towards\n\n//   // }\n\n//   // speed() {\n//   //   // control how quickly the enemy moves along the game board\n//   //   // set the speed to 2 pixels per frame\n//   // }\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW5lbXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFFekMsTUFBTUMsU0FBUyxHQUFHO0VBQ2hCQyxXQUFXLEVBQUUsRUFBRTtFQUNmQyxZQUFZLEVBQUU7QUFDaEIsQ0FBQztBQUVjLE1BQU1DLEtBQUssQ0FBQztFQUN6QkMsV0FBV0EsQ0FBQUMsSUFBQSxFQUFRO0lBQUEsSUFBUDtNQUFDQyxDQUFDO01BQUNDO0lBQUMsQ0FBQyxHQUFBRixJQUFBO0lBQ2YsSUFBSSxDQUFDRyxRQUFRLEdBQUc7TUFBQ0YsQ0FBQztNQUFFQztJQUFDLENBQUM7SUFDdEIsSUFBSSxDQUFDRSxhQUFhLEdBQUcsQ0FBQztJQUN0QixJQUFJLENBQUNDLE1BQU0sR0FBRztNQUNaSixDQUFDLEVBQUUsSUFBSSxDQUFDRSxRQUFRLENBQUNGLENBQUMsR0FBR04sU0FBUyxDQUFDQyxXQUFXLEdBQUMsQ0FBQztNQUM1Q00sQ0FBQyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxDQUFDRCxDQUFDLEdBQUdQLFNBQVMsQ0FBQ0UsWUFBWSxHQUFDO0lBQzlDLENBQUM7SUFDRDtJQUNBO0VBQ0Y7O0VBRUFTLFNBQVNBLENBQUNDLENBQUMsRUFBRTtJQUNYO0lBQ0FBLENBQUMsQ0FBQ0MsU0FBUyxHQUFHLE1BQU07SUFDcEJELENBQUMsQ0FBQ0UsUUFBUSxDQUFDLElBQUksQ0FBQ04sUUFBUSxDQUFDRixDQUFDLEVBQUUsSUFBSSxDQUFDRSxRQUFRLENBQUNELENBQUMsRUFBRVAsU0FBUyxDQUFDQyxXQUFXLEVBQUVELFNBQVMsQ0FBQ0UsWUFBWSxDQUFDO0lBQzNGO0VBQ0Y7O0VBRUFhLE1BQU1BLENBQUNILENBQUMsRUFBRTtJQUNSO0lBQ0EsSUFBSSxDQUFDRCxTQUFTLENBQUNDLENBQUMsQ0FBQztJQUVqQixNQUFNSSxRQUFRLEdBQUdqQixtREFBUyxDQUFDLElBQUksQ0FBQ1UsYUFBYSxDQUFDO0lBQzlDLE1BQU1RLFNBQVMsR0FBR0QsUUFBUSxDQUFDVCxDQUFDLEdBQUcsSUFBSSxDQUFDQyxRQUFRLENBQUNELENBQUM7SUFDOUMsTUFBTVcsU0FBUyxHQUFHRixRQUFRLENBQUNWLENBQUMsR0FBRyxJQUFJLENBQUNFLFFBQVEsQ0FBQ0YsQ0FBQztJQUM5QyxNQUFNYSxLQUFLLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDSixTQUFTLEVBQUVDLFNBQVMsQ0FBQztJQUU5QyxJQUFJLENBQUNWLFFBQVEsQ0FBQ0YsQ0FBQyxJQUFJYyxJQUFJLENBQUNFLEdBQUcsQ0FBQ0gsS0FBSyxDQUFDO0lBQ2xDLElBQUksQ0FBQ1gsUUFBUSxDQUFDRCxDQUFDLElBQUlhLElBQUksQ0FBQ0csR0FBRyxDQUFDSixLQUFLLENBQUM7O0lBRWxDO0lBQ0UsSUFBSUMsSUFBSSxDQUFDSSxLQUFLLENBQUMsSUFBSSxDQUFDaEIsUUFBUSxDQUFDRixDQUFDLENBQUMsS0FBS2MsSUFBSSxDQUFDSSxLQUFLLENBQUNSLFFBQVEsQ0FBQ1YsQ0FBQyxDQUFDLElBQUljLElBQUksQ0FBQ0ksS0FBSyxDQUFDLElBQUksQ0FBQ2hCLFFBQVEsQ0FBQ0QsQ0FBQyxDQUFDLEtBQUthLElBQUksQ0FBQ0ksS0FBSyxDQUFDUixRQUFRLENBQUNULENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0UsYUFBYSxHQUFHViwwREFBZ0IsR0FBRyxDQUFDLEVBQUU7TUFDakssSUFBSSxDQUFDVSxhQUFhLEVBQUc7SUFDdkI7SUFDRjtFQUNGO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ1E7QUFDQTtBQUNSOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBR0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9wcm9qZWN0Ly4vc3JjL2VuZW15LmpzPzllYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2F5cG9pbnRzIH0gZnJvbSBcIi4vd2F5cG9pbnQuanNcIlxuXG5jb25zdCBDT05TVEFOVFMgPSB7XG4gIEVORU1ZX1dJRFRIOiA5MCxcbiAgRU5FTVlfSEVJR0hUOiA5MFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5lbXkge1xuICBjb25zdHJ1Y3Rvcih7eCx5fSkge1xuICAgIHRoaXMucG9zaXRpb24gPSB7eCwgeX07XG4gICAgdGhpcy53YXlwb2ludEluZGV4ID0gMDtcbiAgICB0aGlzLmNlbnRlciA9IHtcbiAgICAgIHg6IHRoaXMucG9zaXRpb24ueCArIENPTlNUQU5UUy5FTkVNWV9XSURUSC8yLFxuICAgICAgeTogdGhpcy5wb3NpdGlvbi55ICsgQ09OU1RBTlRTLkVORU1ZX0hFSUdIVC8yXG4gICAgfVxuICAgIC8vIHRoaXMuc3BlZWQgPSAyXG4gICAgLy8gdGhpcy5lbmVtaWVzID0gW107XG4gIH1cblxuICBkcmF3RW5lbXkoYykge1xuICAgIC8vIGRyYXcgdGhlIGVuZW15IHNxdWFyZSB3aXRoIGdpdmVuIHBvc2l0aW9uXG4gICAgYy5maWxsU3R5bGUgPSBcImJsdWVcIjtcbiAgICBjLmZpbGxSZWN0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCBDT05TVEFOVFMuRU5FTVlfV0lEVEgsIENPTlNUQU5UUy5FTkVNWV9IRUlHSFQpO1xuICAgIC8vcmVwbGFjZSB0aGlzIHdpdGggYSBjaXJjbGUgXG4gIH1cblxuICB1cGRhdGUoYykge1xuICAgIC8vIGRyYXcgdGhlIGVuZW15IGFuZCB1cGRhdGUgaXRzIHBvc2l0aW9uXG4gICAgdGhpcy5kcmF3RW5lbXkoYyk7XG5cbiAgICBjb25zdCB3YXlwb2ludCA9IHdheXBvaW50c1t0aGlzLndheXBvaW50SW5kZXhdXG4gICAgY29uc3QgeURpc3RhbmNlID0gd2F5cG9pbnQueSAtIHRoaXMucG9zaXRpb24ueVxuICAgIGNvbnN0IHhEaXN0YW5jZSA9IHdheXBvaW50LnggLSB0aGlzLnBvc2l0aW9uLnhcbiAgICBjb25zdCBhbmdsZSA9IE1hdGguYXRhbjIoeURpc3RhbmNlLCB4RGlzdGFuY2UpXG5cbiAgICB0aGlzLnBvc2l0aW9uLnggKz0gTWF0aC5jb3MoYW5nbGUpXG4gICAgdGhpcy5wb3NpdGlvbi55ICs9IE1hdGguc2luKGFuZ2xlKVxuXG4gICAgLy8gd2hpbGUgKHRoaXMud2F5cG9pbnRJbmRleCA8IHdheXBvaW50cy5sZW5ndGggLSAxKSB7XG4gICAgICBpZiAoTWF0aC5yb3VuZCh0aGlzLnBvc2l0aW9uLngpID09PSBNYXRoLnJvdW5kKHdheXBvaW50LngpICYmIE1hdGgucm91bmQodGhpcy5wb3NpdGlvbi55KSA9PT0gTWF0aC5yb3VuZCh3YXlwb2ludC55KSAmJiB0aGlzLndheXBvaW50SW5kZXggPCB3YXlwb2ludHMubGVuZ3RoIC0gMSkge1xuICAgICAgICB0aGlzLndheXBvaW50SW5kZXggKys7XG4gICAgICB9XG4gICAgLy8gfVxuICB9XG59XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZW15IHtcbi8vICAgY29uc3RydWN0b3Ioe3gsIHl9KSB7XG4vLyAgICAgdGhpcy5wb3NpdGlvbiA9IHtcbiAgICAgICAgLy8gdGhpcy5wb3NpdGlvbiA9IHt4LCB5fVxuICAgICAgICAvLyB0aGlzLndheXBvaW50SW5kZXggPSAwXG4vLyAgICAgfVxuXG4vLyAgICAgLy8gdGhpcy5zcGVlZCA9IDI7IC8vc2V0IHRoZSBkZWZhdWx0IHNwZWVkIHRvIDIgcGl4ZWxzIHBlciBmcmFtZVxuLy8gICAgIC8vIHRoaXMuaGVhbHRoID0gMTAwO1xuLy8gICAgIC8vIHRoaXMudmVsb2NpdHkgPSB7XG4vLyAgICAgLy8gICB4OiAwLFxuLy8gICAgIC8vICAgeTowXG4vLyAgICAgLy8gfVxuXG4vLyAgIH1cblxuLy8gICAvLyBhbmltYXRlKCkge1xuLy8gICAvLyAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShtb3ZlbWVudCk7XG4vLyAgIC8vICAgYy5kcmF3SW1hZ2UoaW1nLCAwLCAwKTtcbi8vICAgLy8gICBjLmZpbGxTdHlsZSA9IFwiYmx1ZVwiO1xuLy8gICAvLyAgIGMuZmlsbFJlY3QoeCwgNDAwLCA5MCwgOTApO1xuLy8gICAvLyAgIHgrK1xuLy8gICAvLyB9XG5cbi8vICAgZHJhd0VuZW15KGMpIHtcbi8vICAgICAvLyBkcmF3IHRoZSBlbmVteSBzcXVhcmUgd2l0aCBnaXZlbiBwb3NpdGlvblxuLy8gICAgIGMuZmlsbFN0eWxlID0gXCJibHVlXCI7XG4vLyAgICAgYy5maWxsUmVjdCh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgQ09OU1RBTlRTLkVORU1ZX1dJRFRILCBDT05TVEFOVFMuRU5FTVlfSEVJR0hUKTtcbi8vICAgfVxuXG4vLyAgIHVwZGF0ZShjKSB7XG4vLyAgICAgLy8gZHJhdyB0aGUgZW5lbXkgYW5kIHVwZGF0ZSBpdHMgcG9zaXRpb25cbi8vICAgICB0aGlzLmRyYXdFbmVteShjKTtcbi8vICAgICB0aGlzLnBvc2l0aW9uLnggKys7XG5cbi8vICAgICAvLyBjYWxjdWxhdGUgZGlzdGFuY2UgYmV0d2VlbiBlbmVteSdzIGN1cnJlbnQgcG9zaXRpb24gYW5kIHRoZSBjdXJyZW50IHdheXBvaW50LCBtb3ZlIGVuZW15IHRvd2FyZHMgdGhlIHdheXBvaW50XG4vLyAgICAgLy8gd2hlbiBlbmVteSByZWFjaGVzIHRoZSBjdXJyZW50IHdheXBvaW50LCB1cGRhdGUgdGhlIGN1cnJlbnRXYXlwb2ludCBwcm9wZXJ0eSB0byB0aGUgbmV4dCB3YXlwb2ludCBhbG9uZyB0aGUgZ2FtZSBib2FyZFxuXG5cbi8vICAgLy8gZGFtYWdlVGFrZW4oKSB7XG5cbi8vICAgLy8gfVxuXG4vLyAgIC8vIGN1cnJlbnRXYXlwb2ludCgpIHtcbi8vICAgLy8gICAvLyBrZWVwIHRyYWNrIG9mIHdoaWNoIHdheXBvaW50IHRoZSBlbmVteSBpcyBjdXJyZW50bHkgaGVhZGluZyB0b3dhcmRzXG5cbi8vICAgLy8gfVxuXG4vLyAgIC8vIHNwZWVkKCkge1xuLy8gICAvLyAgIC8vIGNvbnRyb2wgaG93IHF1aWNrbHkgdGhlIGVuZW15IG1vdmVzIGFsb25nIHRoZSBnYW1lIGJvYXJkXG4vLyAgIC8vICAgLy8gc2V0IHRoZSBzcGVlZCB0byAyIHBpeGVscyBwZXIgZnJhbWVcbi8vICAgLy8gfVxuLy8gfVxuIl0sIm5hbWVzIjpbIndheXBvaW50cyIsIkNPTlNUQU5UUyIsIkVORU1ZX1dJRFRIIiwiRU5FTVlfSEVJR0hUIiwiRW5lbXkiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJ4IiwieSIsInBvc2l0aW9uIiwid2F5cG9pbnRJbmRleCIsImNlbnRlciIsImRyYXdFbmVteSIsImMiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInVwZGF0ZSIsIndheXBvaW50IiwieURpc3RhbmNlIiwieERpc3RhbmNlIiwiYW5nbGUiLCJNYXRoIiwiYXRhbjIiLCJjb3MiLCJzaW4iLCJyb3VuZCIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/enemy.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _waypoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waypoint.js */ \"./src/waypoint.js\");\n/* harmony import */ var _catPlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catPlacement.js */ \"./src/catPlacement.js\");\n/* harmony import */ var _enemy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enemy.js */ \"./src/enemy.js\");\n/* harmony import */ var _cat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cat.js */ \"./src/cat.js\");\n/* harmony import */ var _projectile_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projectile.js */ \"./src/projectile.js\");\n\n\n\n// import catTile from \"./catTile.js\"\n\n\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\nconst canvas = document.querySelector(\"canvas\");\nconst c = canvas.getContext(\"2d\");\ncanvas.width = 1280;\ncanvas.height = 768;\nc.fillStyle = \"white\";\nc.fillRect(0, 0, canvas.width, canvas.height);\n\n// creates and returns a new HTMLImageElement\nconst img = new Image();\nimg.onload = () => {\n  move();\n};\nimg.src = \"assets/finalMap.png\";\n\n// 2D array of all possible catTile placement positions\nconst placementPositions = [];\nfor (let i = 0; i < _catPlacement_js__WEBPACK_IMPORTED_MODULE_1__.catPlacement.length; i += 20) {\n  placementPositions.push(_catPlacement_js__WEBPACK_IMPORTED_MODULE_1__.catPlacement.slice(i, i + 20));\n}\n\n// console.log(placementPositions);\n\nclass CatTile {\n  constructor(_ref) {\n    let {\n      position = {\n        x: 0,\n        y: 0\n      }\n    } = _ref;\n    this.position = position;\n    this.size = 64; //64 pixels per tile\n    this.color = \"rgba(255, 255, 255, 0.2)\";\n    this.occupied = false;\n  }\n  draw() {\n    // c.fillStyle = this.color;\n    // 255 in each red green and blue makes it white\n    c.fillStyle = this.color;\n    c.fillRect(this.position.x, this.position.y, this.size, this.size);\n  }\n  update(mouse) {\n    this.draw();\n    if (mouse.x > this.position.x && mouse.x < this.position.x + this.size && mouse.y > this.position.y && mouse.y < this.position.y + this.size) {\n      this.color = \"rgba(255, 255, 255, 0.5)\";\n    } else {\n      this.color = \"rgba(255, 255, 255, 0.2)\";\n    }\n  }\n\n  //also create a logic that alerts the user that you can't place the tile here if the position is out of bounds\n}\n\nconst catPlacementTiles = [];\nplacementPositions.forEach((row, y) => {\n  row.forEach((col, x) => {\n    if (col === 965) {\n      // place a Tile at the position (x,y) if col has a value\n      catPlacementTiles.push(new CatTile({\n        position: {\n          x: x * 64,\n          y: y * 64\n        }\n      }));\n    }\n  });\n});\n\n// console.log(catPlacementTiles);\n\nlet enemies = [];\nfor (let i = 0; i < 10; i++) {\n  let enemyDistance = i * 130;\n  let newEnemy = new _enemy_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    x: _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints[0].x - enemyDistance,\n    y: _waypoint_js__WEBPACK_IMPORTED_MODULE_0__.waypoints[0].y\n  });\n  enemies.push(newEnemy);\n}\nfunction move() {\n  requestAnimationFrame(move);\n\n  // draw image on canvas\n  c.drawImage(img, 0, 0);\n  enemies.forEach(enemy => {\n    enemy.update(c);\n  });\n  catPlacementTiles.forEach(tile => {\n    // tile.draw();  //not passing in mouse when creating new tile\n    tile.update(mouse);\n  });\n  cats.forEach(cat => {\n    cat.draw(c);\n    cat.projectiles.forEach(projectile => {\n      projectile.draw(c);\n      // projectile.update(c);\n    });\n  });\n}\n\nlet mouse = {\n  x: undefined,\n  y: undefined\n};\nconst cats = [];\nlet activeTile = undefined;\ncanvas.addEventListener(\"click\", event => {\n  if (activeTile && !activeTile.isOccupied) {\n    cats.push(new _cat_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n      position: {\n        x: activeTile.position.x,\n        y: activeTile.position.y\n      }\n    }));\n  }\n  activeTile.isOccupied = true;\n  console.log(cats);\n});\ncanvas.addEventListener(\"mousemove\", event => {\n  mouse.x = event.clientX;\n  mouse.y = event.clientY;\n  // console.log(event);\n\n  activeTile = null;\n  for (let i = 0; i < catPlacementTiles.length; i++) {\n    const tile = catPlacementTiles[i];\n    if (mouse.x > tile.position.x && mouse.x < tile.position.x + tile.size && mouse.y > tile.position.y && mouse.y < tile.position.y + tile.size) {\n      activeTile = tile;\n      break;\n    }\n  }\n});\n\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/projectile.js":
/*!***************************!*\
  !*** ./src/projectile.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Projectile; }\n/* harmony export */ });\n/* harmony import */ var victor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! victor */ \"./node_modules/victor/index.js\");\n/* harmony import */ var victor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(victor__WEBPACK_IMPORTED_MODULE_0__);\n\nclass Projectile {\n  constructor(_ref) {\n    let {\n      position = {\n        x: 0,\n        y: 0\n      }\n    } = _ref;\n    this.position = position;\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n  }\n  draw(c) {\n    c.beginPath();\n    c.arc(this.position.x, this.position.y, 10, 0, Math.PI * 2);\n    c.fillStyle = \"red\";\n    c.fill();\n  }\n  update(c) {\n    c.draw(c);\n    const angle = Math.atan2();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcHJvamVjdGlsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFYixNQUFNQyxVQUFVLENBQUM7RUFDOUJDLFdBQVdBLENBQUFDLElBQUEsRUFBMEI7SUFBQSxJQUF6QjtNQUFDQyxRQUFRLEdBQUc7UUFBQ0MsQ0FBQyxFQUFDLENBQUM7UUFBRUMsQ0FBQyxFQUFDO01BQUM7SUFBQyxDQUFDLEdBQUFILElBQUE7SUFDakMsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSSxDQUFDRyxRQUFRLEdBQUc7TUFBQ0YsQ0FBQyxFQUFDLENBQUM7TUFBRUMsQ0FBQyxFQUFDO0lBQUMsQ0FBQztFQUM1QjtFQUVBRSxJQUFJQSxDQUFDQyxDQUFDLEVBQUU7SUFDTkEsQ0FBQyxDQUFDQyxTQUFTLEVBQUU7SUFDYkQsQ0FBQyxDQUFDRSxHQUFHLENBQUMsSUFBSSxDQUFDUCxRQUFRLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUVNLElBQUksQ0FBQ0MsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMzREosQ0FBQyxDQUFDSyxTQUFTLEdBQUcsS0FBSztJQUNuQkwsQ0FBQyxDQUFDTSxJQUFJLEVBQUU7RUFDVjtFQUVBQyxNQUFNQSxDQUFDUCxDQUFDLEVBQUU7SUFDUkEsQ0FBQyxDQUFDRCxJQUFJLENBQUNDLENBQUMsQ0FBQztJQUVULE1BQU1RLEtBQUssR0FBR0wsSUFBSSxDQUFDTSxLQUFLLEVBQUU7RUFDNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHRfcHJvamVjdC8uL3NyYy9wcm9qZWN0aWxlLmpzPzhjYzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZpY3RvciBmcm9tICd2aWN0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0aWxlIHtcbiAgY29uc3RydWN0b3Ioe3Bvc2l0aW9uID0ge3g6MCwgeTowfX0pIHtcbiAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgdGhpcy52ZWxvY2l0eSA9IHt4OjAsIHk6MH1cbiAgfVxuXG4gIGRyYXcoYykge1xuICAgIGMuYmVnaW5QYXRoKCk7XG4gICAgYy5hcmModGhpcy5wb3NpdGlvbi54LCB0aGlzLnBvc2l0aW9uLnksIDEwLCAwLCBNYXRoLlBJICogMik7XG4gICAgYy5maWxsU3R5bGUgPSBcInJlZFwiO1xuICAgIGMuZmlsbCgpO1xuICB9XG5cbiAgdXBkYXRlKGMpIHtcbiAgICBjLmRyYXcoYyk7XG5cbiAgICBjb25zdCBhbmdsZSA9IE1hdGguYXRhbjIoKVxuICB9XG59XG4iXSwibmFtZXMiOlsiVmljdG9yIiwiUHJvamVjdGlsZSIsImNvbnN0cnVjdG9yIiwiX3JlZiIsInBvc2l0aW9uIiwieCIsInkiLCJ2ZWxvY2l0eSIsImRyYXciLCJjIiwiYmVnaW5QYXRoIiwiYXJjIiwiTWF0aCIsIlBJIiwiZmlsbFN0eWxlIiwiZmlsbCIsInVwZGF0ZSIsImFuZ2xlIiwiYXRhbjIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/projectile.js\n");

/***/ }),

/***/ "./src/waypoint.js":
/*!*************************!*\
  !*** ./src/waypoint.js ***!
  \*************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"waypoints\": function() { return /* binding */ waypoints; }\n/* harmony export */ });\nconst waypoints = [{\n  \"x\": -64,\n  \"y\": 400\n}, {\n  \"x\": 133,\n  \"y\": 401\n}, {\n  \"x\": 139,\n  \"y\": 269\n}, {\n  \"x\": 465,\n  \"y\": 273\n}, {\n  \"x\": 469,\n  \"y\": 527\n}, {\n  \"x\": 724,\n  \"y\": 525\n}, {\n  \"x\": 725,\n  \"y\": 146\n}, {\n  \"x\": 982,\n  \"y\": 147\n}, {\n  \"x\": 984,\n  \"y\": 402\n}, {\n  \"x\": 1276,\n  \"y\": 404\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2F5cG9pbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFNBQVMsR0FBRyxDQUN2QjtFQUNFLEdBQUcsRUFBQyxDQUFDLEVBQUU7RUFDUCxHQUFHLEVBQUM7QUFDTCxDQUFDLEVBQ0Q7RUFDQyxHQUFHLEVBQUMsR0FBRztFQUNQLEdBQUcsRUFBQztBQUNMLENBQUMsRUFDRDtFQUNDLEdBQUcsRUFBQyxHQUFHO0VBQ1AsR0FBRyxFQUFDO0FBQ0wsQ0FBQyxFQUNEO0VBQ0MsR0FBRyxFQUFDLEdBQUc7RUFDUCxHQUFHLEVBQUM7QUFDTCxDQUFDLEVBQ0Q7RUFDQyxHQUFHLEVBQUMsR0FBRztFQUNQLEdBQUcsRUFBQztBQUNMLENBQUMsRUFDRDtFQUNDLEdBQUcsRUFBQyxHQUFHO0VBQ1AsR0FBRyxFQUFDO0FBQ0wsQ0FBQyxFQUNEO0VBQ0MsR0FBRyxFQUFDLEdBQUc7RUFDUCxHQUFHLEVBQUM7QUFDTCxDQUFDLEVBQ0Q7RUFDQyxHQUFHLEVBQUMsR0FBRztFQUNQLEdBQUcsRUFBQztBQUNMLENBQUMsRUFDRDtFQUNDLEdBQUcsRUFBQyxHQUFHO0VBQ1AsR0FBRyxFQUFDO0FBQ0wsQ0FBQyxFQUNEO0VBQ0MsR0FBRyxFQUFDLElBQUk7RUFDUixHQUFHLEVBQUM7QUFDTCxDQUFDLENBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X3Byb2plY3QvLi9zcmMvd2F5cG9pbnQuanM/OTVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgd2F5cG9pbnRzID0gW1xuICB7XG4gICAgXCJ4XCI6LTY0LFxuICAgIFwieVwiOjQwMFxuICAgfSxcbiAgIHtcbiAgICBcInhcIjoxMzMsXG4gICAgXCJ5XCI6NDAxXG4gICB9LFxuICAge1xuICAgIFwieFwiOjEzOSxcbiAgICBcInlcIjoyNjlcbiAgIH0sXG4gICB7XG4gICAgXCJ4XCI6NDY1LFxuICAgIFwieVwiOjI3M1xuICAgfSxcbiAgIHtcbiAgICBcInhcIjo0NjksXG4gICAgXCJ5XCI6NTI3XG4gICB9LFxuICAge1xuICAgIFwieFwiOjcyNCxcbiAgICBcInlcIjo1MjVcbiAgIH0sXG4gICB7XG4gICAgXCJ4XCI6NzI1LFxuICAgIFwieVwiOjE0NlxuICAgfSxcbiAgIHtcbiAgICBcInhcIjo5ODIsXG4gICAgXCJ5XCI6MTQ3XG4gICB9LFxuICAge1xuICAgIFwieFwiOjk4NCxcbiAgICBcInlcIjo0MDJcbiAgIH0sXG4gICB7XG4gICAgXCJ4XCI6MTI3NixcbiAgICBcInlcIjo0MDRcbiAgIH1cbl07XG4iXSwibmFtZXMiOlsid2F5cG9pbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/waypoint.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./node_modules/victor/index.js":
/*!**************************************!*\
  !*** ./node_modules/victor/index.js ***!
  \**************************************/
/***/ (function(module, exports) {

eval("exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/victor/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;